{"version":3,"file":"static/js/279.1ab21303.chunk.js","mappings":"6OAEaA,EAAOC,EAAAA,GAAAA,GAAH,mF,UCmCjB,EAzBoB,WAClB,IAAMC,GAAmBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC/BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,KAGF,kCACG,OAACP,QAAD,IAACA,GAAAA,EAAkBW,UAAWN,IAAUF,IACvC,uBAAG,wBAGL,SAACL,EAAD,UACGE,EAAiBY,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAd,OACpB,SAAC,EAAD,CAA2BD,KAAMA,EAAMC,MAAOA,EAAOF,IAAKA,GAApCA,EADF,QAM7B,ECjCYG,EAAcjB,EAAAA,GAAAA,GAAH,sLAMF,qBAAGkB,MAAkBC,OAAOC,UAA5B,IAITC,EAAkBrB,EAAAA,GAAAA,GAAH,kEAKfsB,EAAkBtB,EAAAA,GAAAA,GAAH,+DAMfuB,EAAevB,EAAAA,GAAAA,OAAH,8LAIH,qBAAGkB,MAAkBC,OAAOK,uBAA5B,IACX,qBAAGN,MAAkBC,OAAOM,UAA5B,IAIa,qBAAGP,MAAkBC,OAAOO,qBAA5B,ICExB,EAxBwB,SAAC,GAA0B,IAAxBX,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOF,EAAU,EAAVA,IAChCN,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAACQ,EAAD,YACE,UAACI,EAAD,YACE,SAACC,EAAD,CAAiBK,UAAU,OAA3B,SAAmCZ,KACnC,SAACO,EAAD,UAAkBN,QAEpB,SAACO,EAAD,CAAcK,QAVG,WACnBpB,GAASqB,EAAAA,EAAAA,IAAcf,GACxB,EAQG,SAAqC,aAG1C,E,oBCxBYgB,EAAc9B,EAAAA,GAAAA,MAAH,uGAIb,qBAAGkB,MAAkBC,OAAOY,KAA5B,IAGEC,EAAchC,EAAAA,GAAAA,MAAH,8JAIF,qBAAGkB,MAAkBC,OAAOc,WAA5B,ICRhBC,GAAgBC,EAAAA,EAAAA,MAwBtB,EAtBe,WACb,IAAM3B,GAAWC,EAAAA,EAAAA,MACX2B,GAAQlC,EAAAA,EAAAA,KAAY,SAAAmC,GAAK,OAAIA,EAAMC,MAAV,IAK/B,OACE,iCACE,SAACR,EAAD,CAAaS,QAASL,EAAtB,SAAqC,2BACrC,SAACF,EAAD,CACEQ,KAAK,OACLzB,KAAK,SACLqB,MAAOA,EACPK,SAV0B,SAAC,GAA2B,IAAfL,EAAc,EAAxBM,OAAUN,MAC3C5B,GAASmC,EAAAA,EAAAA,GAAUP,GACpB,EASKQ,YAAY,qBACZC,GAAIX,MAIX,E,oBCHD,EAnBqB,kBACnB,iCACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAWY,MAAM,cACjB,SAAC,KAAD,CAAUA,MAAM,sBAChB,SAAC,IAAD,UAGJ,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAUA,MAAM,mBAChB,SAAC,EAAD,KACA,SAAC,EAAD,WAba,C","sources":["components/ContactsPage/ContactList/ContactList.styled.jsx","components/ContactsPage/ContactList/ContactList.jsx","components/ContactsPage/ContactListItem/ContactListItem.styled.jsx","components/ContactsPage/ContactListItem/ContactListItem.jsx","components/ContactsPage/Filter/Filter.styled.jsx","components/ContactsPage/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n  fetchContacts,\n} from 'redux/contacts';\n\nimport { ContactListItem } from 'components/ContactsPage';\nimport { List } from './ContactList.styled';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {!filteredContacts?.length && !error && !isLoading && (\n        <p>No contacts found.</p>\n      )}\n\n      <List>\n        {filteredContacts.map(({ _id, name, phone }) => (\n          <ContactListItem key={_id} name={name} phone={phone} _id={_id} />\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  gap: 20px;\n  align-items: center;\n  padding: 10px;\n  border: 1px solid ${({ theme }) => theme.colors.itemBorder};\n  border-radius: 5px;\n`;\n\nexport const ContactInfoList = styled.ul`\n  max-width: 400px;\n  overflow: hidden;\n`;\n\nexport const ContactInfoItem = styled.li`\n  &.name {\n    font-size: 16px;\n  }\n`;\n\nexport const DeleteButton = styled.button`\n  padding: 5px;\n  border-radius: 5px;\n  border: none;\n  background-color: ${({ theme }) => theme.colors.buttonBackgroundDefault};\n  color: ${({ theme }) => theme.colors.buttonText};\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.buttonBackgroundHover};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts';\nimport PropTypes from 'prop-types';\nimport {\n  ContactItem,\n  ContactInfoList,\n  ContactInfoItem,\n  DeleteButton,\n} from './ContactListItem.styled';\n\nconst ContactListItem = ({ name, phone, _id }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(_id));\n  };\n\n  return (\n    <ContactItem>\n      <ContactInfoList>\n        <ContactInfoItem className=\"name\">{name}</ContactInfoItem>\n        <ContactInfoItem>{phone}</ContactInfoItem>\n      </ContactInfoList>\n      <DeleteButton onClick={handleDelete}>Delete</DeleteButton>\n    </ContactItem>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  _id: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  font-weight: bold;\n  margin-bottom: 5px;\n  display: block;\n  color: ${({ theme }) => theme.colors.label};\n`;\n\nexport const FilterInput = styled.input`\n  width: 250px;\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid ${({ theme }) => theme.colors.inputBorder};\n  margin-bottom: 20px;\n  box-sizing: border-box;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter';\nimport { nanoid } from 'nanoid';\nimport { FilterInput, FilterLabel } from './Filter.styled';\n\nconst searchInputId = nanoid();\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(state => state.filter);\n\n  const handleSearchInputChange = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n  return (\n    <>\n      <FilterLabel htmlFor={searchInputId}>Find contacts by name</FilterLabel>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={handleSearchInputChange}\n        placeholder=\"Enter contact name\"\n        id={searchInputId}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","// ContactPage.jsx\nimport { ContactList, Filter } from 'components/ContactsPage';\nimport { ContactForm } from 'components/FormPartials';\nimport { Container, MainTitle, Section, SubTitle } from 'components/Common';\n\nconst ContactsPage = () => (\n  <>\n    <Section>\n      <Container>\n        <MainTitle title=\"Contacts\" />\n        <SubTitle title=\"Add a new one...\" />\n        <ContactForm />\n      </Container>\n    </Section>\n    <Section>\n      <Container>\n        <SubTitle title=\"Your Contacts\" />\n        <Filter />\n        <ContactList />\n      </Container>\n    </Section>\n  </>\n);\n\nexport default ContactsPage;\n"],"names":["List","styled","filteredContacts","useSelector","selectFilteredContacts","isLoading","selectIsLoading","error","selectError","dispatch","useDispatch","useEffect","fetchContacts","length","map","_id","name","phone","ContactItem","theme","colors","itemBorder","ContactInfoList","ContactInfoItem","DeleteButton","buttonBackgroundDefault","buttonText","buttonBackgroundHover","className","onClick","deleteContact","FilterLabel","label","FilterInput","inputBorder","searchInputId","nanoid","value","state","filter","htmlFor","type","onChange","target","setFilter","placeholder","id","title"],"sourceRoot":""}