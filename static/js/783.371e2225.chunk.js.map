{"version":3,"file":"static/js/783.371e2225.chunk.js","mappings":"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","sources":["utils/constants.js","utils/validationFunctions.js","utils/countries.js","components/FormPartials/ContactForm.jsx","assets/validationMessages.js","components/FormPartials/LoginForm.jsx","components/FormPartials/RegisterForm.jsx","components/FormPartials/Form/Form.styled.jsx","components/FormPartials/Form/Form.jsx","components/FormPartials/Label/Label.styled.jsx","components/FormPartials/Label/Label.jsx"],"sourcesContent":["export const NAME_CHARACTERS_CHECK_REGEX = /^[a-zA-Z0-9_.-]+$/;\nexport const NAME_EDGE_CHAR_VALIDATION_REGEX = /^[^-.].*[^-.]$/;\nexport const EMAIL_REGEX = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,8})+$/;\nexport const PHONE_REGEX = /^\\+?\\d{6,12}$/;\nexport const PASSWORD_REGEX = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d.,-]*$/;\n","import {\n  NAME_CHARACTERS_CHECK_REGEX,\n  NAME_EDGE_CHAR_VALIDATION_REGEX,\n  EMAIL_REGEX,\n  PHONE_REGEX,\n  PASSWORD_REGEX,\n} from './constants';\n\nexport const isFieldEmpty = (fieldName, fieldValue, setNotification) => {\n  const trimmedValue = fieldValue.trim();\n  if (trimmedValue === '') {\n    setNotification({\n      type: 'warning',\n      message: `${fieldName} field can't be empty`,\n    });\n    return true;\n  }\n  return false;\n};\n\nexport const isContactNameValid = (name, setNotification) => {\n  if (name.trim().length < 1 || name.trim().length > 100) {\n    setNotification({\n      type: 'error',\n      message: 'Name must be at least 3 characters long',\n    });\n    return false;\n  }\n\n  return true;\n};\n\nexport const isNameValid = (name, setNotification) => {\n  if (name.trim().length < 6 || name.trim().length > 30) {\n    setNotification({\n      type: 'error',\n      message: 'Name must be 6-30 characters long',\n    });\n    return false;\n  }\n\n  if (!NAME_CHARACTERS_CHECK_REGEX.test(name.trim())) {\n    setNotification({\n      type: 'error',\n      message:\n        'Name can only include letters, numbers, underscores, hyphens, and periods',\n    });\n    return false;\n  }\n\n  if (!NAME_EDGE_CHAR_VALIDATION_REGEX.test(name.trim())) {\n    setNotification({\n      type: 'error',\n      message: 'Name cannot begin or end with a hyphen or a period',\n    });\n    return false;\n  }\n\n  return true;\n};\n\nexport const isEmailValid = (email, setNotification) => {\n  if (!EMAIL_REGEX.test(email.trim())) {\n    setNotification({\n      type: 'error',\n      message: `Email is not valid`,\n    });\n    return false;\n  }\n\n  return true;\n};\n\nexport const isPhoneNumberValid = (phoneNumber, setNotification) => {\n  if (!PHONE_REGEX.test(phoneNumber.trim())) {\n    setNotification({\n      type: 'error',\n      message: `Phone number can only contain numbers, spaces, dashes, and parentheses`,\n    });\n    return false;\n  }\n\n  return true;\n};\n\nexport const isPasswordValid = (password, setNotification) => {\n  if (password.trim().length < 6) {\n    setNotification({\n      type: 'error',\n      message: 'Password must be at least 6 characters long',\n    });\n    return false;\n  }\n  if (!PASSWORD_REGEX.test(password.trim())) {\n    setNotification({\n      type: 'error',\n      message: `Password must contain at least one letter, one digit, and can include periods, commas, and hyphens`,\n    });\n    return false;\n  }\n\n  return true;\n};\n\nexport const isConfirmationMatch = (\n  confirmValue,\n  password,\n  setNotification\n) => {\n  if (confirmValue !== password) {\n    setNotification({\n      type: 'error',\n      message: `Password confirmation does not match`,\n    });\n    return false;\n  }\n  if (password.trim().length < 6) {\n    setNotification({\n      type: 'error',\n      message: 'Password must be at least 6 characters long',\n    });\n    return false;\n  }\n  if (!PASSWORD_REGEX.test(password.trim())) {\n    setNotification({\n      type: 'error',\n      message: `Password must contain at least one letter, one digit, and can include periods, commas, and hyphens`,\n    });\n    return false;\n  }\n\n  return true;\n};\n\nexport const isContactExist = (\n  contacts,\n  fieldName,\n  fieldValue,\n  setNotification\n) => {\n  const isExist = contacts.find(\n    contact => contact[fieldName.toLowerCase()] === fieldValue.trim()\n  );\n\n  if (isExist) {\n    setNotification({\n      type: 'error',\n      message: `${fieldName} \"${fieldValue.trim()}\" is already exists`,\n    });\n    return true;\n  }\n\n  return false;\n};\n\nexport const handleAuthFieldBlur = (\n  fieldName,\n  fieldValue,\n  setAlert,\n  isConfirm = false,\n  confirmValue = null\n) => {\n  if (isFieldEmpty(fieldName, fieldValue, setAlert)) return;\n  if (fieldName === 'Name' && !isNameValid(fieldValue, setAlert)) return;\n  if (fieldName === 'Email' && !isEmailValid(fieldValue, setAlert)) return;\n  if (fieldName === 'Password' && !isPasswordValid(fieldValue, setAlert))\n    return;\n  if (isConfirm && !isConfirmationMatch(fieldValue, confirmValue, setAlert))\n    return;\n  setAlert({\n    type: 'success',\n    message: `${fieldName} is valid`,\n  });\n};\n","export const countries = [\n  { name: 'Afghanistan', code: 'AF', phone: 93 },\n  { name: 'Aland Islands', code: 'AX', phone: 358 },\n  { name: 'Albania', code: 'AL', phone: 355 },\n  { name: 'Algeria', code: 'DZ', phone: 213 },\n  { name: 'American Samoa', code: 'AS', phone: 1684 },\n  { name: 'Andorra', code: 'AD', phone: 376 },\n  { name: 'Angola', code: 'AO', phone: 244 },\n  { name: 'Anguilla', code: 'AI', phone: 1264 },\n  { name: 'Antarctica', code: 'AQ', phone: 672 },\n  { name: 'Antigua and Barbuda', code: 'AG', phone: 1268 },\n  { name: 'Argentina', code: 'AR', phone: 54 },\n  { name: 'Armenia', code: 'AM', phone: 374 },\n  { name: 'Aruba', code: 'AW', phone: 297 },\n  { name: 'Australia', code: 'AU', phone: 61 },\n  { name: 'Austria', code: 'AT', phone: 43 },\n  { name: 'Azerbaijan', code: 'AZ', phone: 994 },\n  { name: 'Bahamas', code: 'BS', phone: 1242 },\n  { name: 'Bahrain', code: 'BH', phone: 973 },\n  { name: 'Bangladesh', code: 'BD', phone: 880 },\n  { name: 'Barbados', code: 'BB', phone: 1246 },\n  { name: 'Belarus', code: 'BY', phone: 375 },\n  { name: 'Belgium', code: 'BE', phone: 32 },\n  { name: 'Belize', code: 'BZ', phone: 501 },\n  { name: 'Benin', code: 'BJ', phone: 229 },\n  { name: 'Bermuda', code: 'BM', phone: 1441 },\n  { name: 'Bhutan', code: 'BT', phone: 975 },\n  { name: 'Bolivia', code: 'BO', phone: 591 },\n  { name: 'Bonaire, Sint Eustatius and Saba', code: 'BQ', phone: 599 },\n  { name: 'Bosnia and Herzegovina', code: 'BA', phone: 387 },\n  { name: 'Botswana', code: 'BW', phone: 267 },\n  { name: 'Bouvet Island', code: 'BV', phone: 55 },\n  { name: 'Brazil', code: 'BR', phone: 55 },\n  { name: 'British Indian Ocean Territory', code: 'IO', phone: 246 },\n  { name: 'Brunei Darussalam', code: 'BN', phone: 673 },\n  { name: 'Bulgaria', code: 'BG', phone: 359 },\n  { name: 'Burkina Faso', code: 'BF', phone: 226 },\n  { name: 'Burundi', code: 'BI', phone: 257 },\n  { name: 'Cambodia', code: 'KH', phone: 855 },\n  { name: 'Cameroon', code: 'CM', phone: 237 },\n  { name: 'Canada', code: 'CA', phone: 1 },\n  { name: 'Cape Verde', code: 'CV', phone: 238 },\n  { name: 'Cayman Islands', code: 'KY', phone: 1345 },\n  { name: 'Central African Republic', code: 'CF', phone: 236 },\n  { name: 'Chad', code: 'TD', phone: 235 },\n  { name: 'Chile', code: 'CL', phone: 56 },\n  { name: 'China', code: 'CN', phone: 86 },\n  { name: 'Christmas Island', code: 'CX', phone: 61 },\n  { name: 'Cocos (Keeling) Islands', code: 'CC', phone: 672 },\n  { name: 'Colombia', code: 'CO', phone: 57 },\n  { name: 'Comoros', code: 'KM', phone: 269 },\n  { name: 'Congo', code: 'CG', phone: 242 },\n  { name: 'Congo, Democratic Republic of the Congo', code: 'CD', phone: 242 },\n  { name: 'Cook Islands', code: 'CK', phone: 682 },\n  { name: 'Costa Rica', code: 'CR', phone: 506 },\n  { name: \"Cote D'Ivoire\", code: 'CI', phone: 225 },\n  { name: 'Croatia', code: 'HR', phone: 385 },\n  { name: 'Cuba', code: 'CU', phone: 53 },\n  { name: 'Curacao', code: 'CW', phone: 599 },\n  { name: 'Cyprus', code: 'CY', phone: 357 },\n  { name: 'Czech Republic', code: 'CZ', phone: 420 },\n  { name: 'Denmark', code: 'DK', phone: 45 },\n  { name: 'Djibouti', code: 'DJ', phone: 253 },\n  { name: 'Dominica', code: 'DM', phone: 1767 },\n  { name: 'Dominican Republic', code: 'DO', phone: 1809 },\n  { name: 'Ecuador', code: 'EC', phone: 593 },\n  { name: 'Egypt', code: 'EG', phone: 20 },\n  { name: 'El Salvador', code: 'SV', phone: 503 },\n  { name: 'Equatorial Guinea', code: 'GQ', phone: 240 },\n  { name: 'Eritrea', code: 'ER', phone: 291 },\n  { name: 'Estonia', code: 'EE', phone: 372 },\n  { name: 'Ethiopia', code: 'ET', phone: 251 },\n  { name: 'Falkland Islands (Malvinas)', code: 'FK', phone: 500 },\n  { name: 'Faroe Islands', code: 'FO', phone: 298 },\n  { name: 'Fiji', code: 'FJ', phone: 679 },\n  { name: 'Finland', code: 'FI', phone: 358 },\n  { name: 'France', code: 'FR', phone: 33 },\n  { name: 'French Guiana', code: 'GF', phone: 594 },\n  { name: 'French Polynesia', code: 'PF', phone: 689 },\n  { name: 'French Southern Territories', code: 'TF', phone: 262 },\n  { name: 'Gabon', code: 'GA', phone: 241 },\n  { name: 'Gambia', code: 'GM', phone: 220 },\n  { name: 'Georgia', code: 'GE', phone: 995 },\n  { name: 'Germany', code: 'DE', phone: 49 },\n  { name: 'Ghana', code: 'GH', phone: 233 },\n  { name: 'Gibraltar', code: 'GI', phone: 350 },\n  { name: 'Greece', code: 'GR', phone: 30 },\n  { name: 'Greenland', code: 'GL', phone: 299 },\n  { name: 'Grenada', code: 'GD', phone: 1473 },\n  { name: 'Guadeloupe', code: 'GP', phone: 590 },\n  { name: 'Guam', code: 'GU', phone: 1671 },\n  { name: 'Guatemala', code: 'GT', phone: 502 },\n  { name: 'Guernsey', code: 'GG', phone: 44 },\n  { name: 'Guinea', code: 'GN', phone: 224 },\n  { name: 'Guinea-Bissau', code: 'GW', phone: 245 },\n  { name: 'Guyana', code: 'GY', phone: 592 },\n  { name: 'Haiti', code: 'HT', phone: 509 },\n  { name: 'Heard Island and McDonald Islands', code: 'HM', phone: 0 },\n  { name: 'Holy See (Vatican City State)', code: 'VA', phone: 39 },\n  { name: 'Honduras', code: 'HN', phone: 504 },\n  { name: 'Hong Kong', code: 'HK', phone: 852 },\n  { name: 'Hungary', code: 'HU', phone: 36 },\n  { name: 'Iceland', code: 'IS', phone: 354 },\n  { name: 'India', code: 'IN', phone: 91 },\n  { name: 'Indonesia', code: 'ID', phone: 62 },\n  { name: 'Iran, Islamic Republic of', code: 'IR', phone: 98 },\n  { name: 'Iraq', code: 'IQ', phone: 964 },\n  { name: 'Ireland', code: 'IE', phone: 353 },\n  { name: 'Isle of Man', code: 'IM', phone: 44 },\n  { name: 'Israel', code: 'IL', phone: 972 },\n  { name: 'Italy', code: 'IT', phone: 39 },\n  { name: 'Jamaica', code: 'JM', phone: 1876 },\n  { name: 'Japan', code: 'JP', phone: 81 },\n  { name: 'Jersey', code: 'JE', phone: 44 },\n  { name: 'Jordan', code: 'JO', phone: 962 },\n  { name: 'Kazakhstan', code: 'KZ', phone: 7 },\n  { name: 'Kenya', code: 'KE', phone: 254 },\n  { name: 'Kiribati', code: 'KI', phone: 686 },\n  { name: \"Korea, Democratic People's Republic of\", code: 'KP', phone: 850 },\n  { name: 'Korea, Republic of', code: 'KR', phone: 82 },\n  { name: 'Kosovo', code: 'XK', phone: 383 },\n  { name: 'Kuwait', code: 'KW', phone: 965 },\n  { name: 'Kyrgyzstan', code: 'KG', phone: 996 },\n  { name: \"Lao People's Democratic Republic\", code: 'LA', phone: 856 },\n  { name: 'Latvia', code: 'LV', phone: 371 },\n  { name: 'Lebanon', code: 'LB', phone: 961 },\n  { name: 'Lesotho', code: 'LS', phone: 266 },\n  { name: 'Liberia', code: 'LR', phone: 231 },\n  { name: 'Libyan Arab Jamahiriya', code: 'LY', phone: 218 },\n  { name: 'Liechtenstein', code: 'LI', phone: 423 },\n  { name: 'Lithuania', code: 'LT', phone: 370 },\n  { name: 'Luxembourg', code: 'LU', phone: 352 },\n  { name: 'Macao', code: 'MO', phone: 853 },\n  {\n    name: 'Macedonia, the Former Yugoslav Republic of',\n    code: 'MK',\n    phone: 389,\n  },\n  { name: 'Madagascar', code: 'MG', phone: 261 },\n  { name: 'Malawi', code: 'MW', phone: 265 },\n  { name: 'Malaysia', code: 'MY', phone: 60 },\n  { name: 'Maldives', code: 'MV', phone: 960 },\n  { name: 'Mali', code: 'ML', phone: 223 },\n  { name: 'Malta', code: 'MT', phone: 356 },\n  { name: 'Marshall Islands', code: 'MH', phone: 692 },\n  { name: 'Martinique', code: 'MQ', phone: 596 },\n  { name: 'Mauritania', code: 'MR', phone: 222 },\n  { name: 'Mauritius', code: 'MU', phone: 230 },\n  { name: 'Mayotte', code: 'YT', phone: 262 },\n  { name: 'Mexico', code: 'MX', phone: 52 },\n  { name: 'Micronesia, Federated States of', code: 'FM', phone: 691 },\n  { name: 'Moldova, Republic of', code: 'MD', phone: 373 },\n  { name: 'Monaco', code: 'MC', phone: 377 },\n  { name: 'Mongolia', code: 'MN', phone: 976 },\n  { name: 'Montenegro', code: 'ME', phone: 382 },\n  { name: 'Montserrat', code: 'MS', phone: 1664 },\n  { name: 'Morocco', code: 'MA', phone: 212 },\n  { name: 'Mozambique', code: 'MZ', phone: 258 },\n  { name: 'Myanmar', code: 'MM', phone: 95 },\n  { name: 'Namibia', code: 'NA', phone: 264 },\n  { name: 'Nauru', code: 'NR', phone: 674 },\n  { name: 'Nepal', code: 'NP', phone: 977 },\n  { name: 'Netherlands', code: 'NL', phone: 31 },\n  { name: 'Netherlands Antilles', code: 'AN', phone: 599 },\n  { name: 'New Caledonia', code: 'NC', phone: 687 },\n  { name: 'New Zealand', code: 'NZ', phone: 64 },\n  { name: 'Nicaragua', code: 'NI', phone: 505 },\n  { name: 'Niger', code: 'NE', phone: 227 },\n  { name: 'Nigeria', code: 'NG', phone: 234 },\n  { name: 'Niue', code: 'NU', phone: 683 },\n  { name: 'Norfolk Island', code: 'NF', phone: 672 },\n  { name: 'Northern Mariana Islands', code: 'MP', phone: 1670 },\n  { name: 'Norway', code: 'NO', phone: 47 },\n  { name: 'Oman', code: 'OM', phone: 968 },\n  { name: 'Pakistan', code: 'PK', phone: 92 },\n  { name: 'Palau', code: 'PW', phone: 680 },\n  { name: 'Palestinian Territory, Occupied', code: 'PS', phone: 970 },\n  { name: 'Panama', code: 'PA', phone: 507 },\n  { name: 'Papua New Guinea', code: 'PG', phone: 675 },\n  { name: 'Paraguay', code: 'PY', phone: 595 },\n  { name: 'Peru', code: 'PE', phone: 51 },\n  { name: 'Philippines', code: 'PH', phone: 63 },\n  { name: 'Pitcairn', code: 'PN', phone: 64 },\n  { name: 'Poland', code: 'PL', phone: 48 },\n  { name: 'Portugal', code: 'PT', phone: 351 },\n  { name: 'Puerto Rico', code: 'PR', phone: 1787 },\n  { name: 'Qatar', code: 'QA', phone: 974 },\n  { name: 'Reunion', code: 'RE', phone: 262 },\n  { name: 'Romania', code: 'RO', phone: 40 },\n  { name: 'Russian Federation', code: 'RU', phone: 7 },\n  { name: 'Rwanda', code: 'RW', phone: 250 },\n  { name: 'Saint Barthelemy', code: 'BL', phone: 590 },\n  { name: 'Saint Helena', code: 'SH', phone: 290 },\n  { name: 'Saint Kitts and Nevis', code: 'KN', phone: 1869 },\n  { name: 'Saint Lucia', code: 'LC', phone: 1758 },\n  { name: 'Saint Martin', code: 'MF', phone: 590 },\n  { name: 'Saint Pierre and Miquelon', code: 'PM', phone: 508 },\n  { name: 'Saint Vincent and the Grenadines', code: 'VC', phone: 1784 },\n  { name: 'Samoa', code: 'WS', phone: 684 },\n  { name: 'San Marino', code: 'SM', phone: 378 },\n  { name: 'Sao Tome and Principe', code: 'ST', phone: 239 },\n  { name: 'Saudi Arabia', code: 'SA', phone: 966 },\n  { name: 'Senegal', code: 'SN', phone: 221 },\n  { name: 'Serbia', code: 'RS', phone: 381 },\n  { name: 'Serbia and Montenegro', code: 'CS', phone: 381 },\n  { name: 'Seychelles', code: 'SC', phone: 248 },\n  { name: 'Sierra Leone', code: 'SL', phone: 232 },\n  { name: 'Singapore', code: 'SG', phone: 65 },\n  { name: 'St Martin', code: 'SX', phone: 721 },\n  { name: 'Slovakia', code: 'SK', phone: 421 },\n  { name: 'Slovenia', code: 'SI', phone: 386 },\n  { name: 'Solomon Islands', code: 'SB', phone: 677 },\n  { name: 'Somalia', code: 'SO', phone: 252 },\n  { name: 'South Africa', code: 'ZA', phone: 27 },\n  {\n    name: 'South Georgia and the South Sandwich Islands',\n    code: 'GS',\n    phone: 500,\n  },\n  { name: 'South Sudan', code: 'SS', phone: 211 },\n  { name: 'Spain', code: 'ES', phone: 34 },\n  { name: 'Sri Lanka', code: 'LK', phone: 94 },\n  { name: 'Sudan', code: 'SD', phone: 249 },\n  { name: 'Suriname', code: 'SR', phone: 597 },\n  { name: 'Svalbard and Jan Mayen', code: 'SJ', phone: 47 },\n  { name: 'Swaziland', code: 'SZ', phone: 268 },\n  { name: 'Sweden', code: 'SE', phone: 46 },\n  { name: 'Switzerland', code: 'CH', phone: 41 },\n  { name: 'Syrian Arab Republic', code: 'SY', phone: 963 },\n  { name: 'Taiwan, Province of China', code: 'TW', phone: 886 },\n  { name: 'Tajikistan', code: 'TJ', phone: 992 },\n  { name: 'Tanzania, United Republic of', code: 'TZ', phone: 255 },\n  { name: 'Thailand', code: 'TH', phone: 66 },\n  { name: 'Timor-Leste', code: 'TL', phone: 670 },\n  { name: 'Togo', code: 'TG', phone: 228 },\n  { name: 'Tokelau', code: 'TK', phone: 690 },\n  { name: 'Tonga', code: 'TO', phone: 676 },\n  { name: 'Trinidad and Tobago', code: 'TT', phone: 1868 },\n  { name: 'Tunisia', code: 'TN', phone: 216 },\n  { name: 'Turkey', code: 'TR', phone: 90 },\n  { name: 'Turkmenistan', code: 'TM', phone: 7370 },\n  { name: 'Turks and Caicos Islands', code: 'TC', phone: 1649 },\n  { name: 'Tuvalu', code: 'TV', phone: 688 },\n  { name: 'Uganda', code: 'UG', phone: 256 },\n  { name: 'Ukraine', code: 'UA', phone: 380 },\n  { name: 'United Arab Emirates', code: 'AE', phone: 971 },\n  { name: 'United Kingdom', code: 'GB', phone: 44 },\n  { name: 'United States', code: 'US', phone: 1 },\n  { name: 'United States Minor Outlying Islands', code: 'UM', phone: 1 },\n  { name: 'Uruguay', code: 'UY', phone: 598 },\n  { name: 'Uzbekistan', code: 'UZ', phone: 998 },\n  { name: 'Vanuatu', code: 'VU', phone: 678 },\n  { name: 'Venezuela', code: 'VE', phone: 58 },\n  { name: 'Viet Nam', code: 'VN', phone: 84 },\n  { name: 'Virgin Islands, British', code: 'VG', phone: 1284 },\n  { name: 'Virgin Islands, U.s.', code: 'VI', phone: 1340 },\n  { name: 'Wallis and Futuna', code: 'WF', phone: 681 },\n  { name: 'Western Sahara', code: 'EH', phone: 212 },\n  { name: 'Yemen', code: 'YE', phone: 967 },\n  { name: 'Zambia', code: 'ZM', phone: 260 },\n  { name: 'Zimbabwe', code: 'ZW', phone: 263 },\n];\n","import { useState, useRef, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\n\nimport { addContact, selectContacts } from 'redux/contacts';\nimport {\n  isFieldEmpty,\n  isContactExist,\n  isContactNameValid,\n  isPhoneNumberValid,\n  isEmailValid,\n} from 'utils';\nimport {\n  nameValidationMessage,\n  phoneValidationMessage,\n  emailValidationMessage,\n} from 'assets';\nimport { Form, Label, FormAlert } from 'components/FormPartials';\nimport { countries } from 'utils/countries';\nimport Button from 'components/Common/Button/Button';\n\nconst ContactForm = () => {\n  const [nameFieldNotification, setNameFieldNotification] = useState(null);\n  const [phoneFieldNotification, setPhoneFieldNotification] = useState(null);\n  const [emailFieldNotification, setEmailFieldNotification] = useState(null);\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const contacts = useSelector(selectContacts);\n  const nameInputId = useRef(nanoid());\n  const phoneInputId = useRef(nanoid());\n  const emailInputId = useRef(nanoid());\n  const countrySelectorRef = useRef(null);\n  const [selectedCountry, setSelectedCountry] = useState(countries[235]);\n  const [countrySearchQuery, setCountrySearchQuery] = useState('');\n  const [isActive, setIsActive] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const selectOption = country => {\n    setSelectedCountry(country);\n    setIsActive(false);\n    setCountrySearchQuery('');\n  };\n\n  const searchCountry = event => {\n    setCountrySearchQuery(event.target.value.toLowerCase());\n  };\n\n  const handleTogglerMousedown = event => {\n    setIsActive(!isActive);\n  };\n\n  const handleTogglerFocus = () => {\n    setIsActive(true);\n  };\n\n  const handleInputFocus = () => setIsActive(false);\n\n  const handleClickOutside = event => {\n    if (\n      countrySelectorRef.current &&\n      !countrySelectorRef.current.contains(event.target)\n    ) {\n      setIsActive(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const filteredCountries = countrySearchQuery\n    ? countries.filter(country => {\n        return country.name.toLowerCase().includes(countrySearchQuery);\n      })\n    : countries;\n\n  const handleContactsFieldBlur = useMemo(\n    () => (fieldName, fieldValue, setAlert) => {\n      if (isFieldEmpty(fieldName, fieldValue, setAlert)) return;\n      if (fieldName === 'Name' && !isContactNameValid(fieldValue, setAlert))\n        return;\n      if (fieldName === 'Phone' && !isPhoneNumberValid(fieldValue, setAlert))\n        return;\n      if (fieldName === 'Email' && !isEmailValid(fieldValue, setAlert)) return;\n      if (isContactExist(contacts, fieldName, fieldValue, setAlert)) return;\n      setAlert({\n        type: 'success',\n        message: `${fieldName} \"${fieldValue.trim()}\" is available.`,\n      });\n    },\n    [contacts]\n  );\n\n  const handleNameBlur = () =>\n    handleContactsFieldBlur('Name', name, setNameFieldNotification);\n\n  const handlePhoneBlur = () =>\n    handleContactsFieldBlur('Phone', phone, setPhoneFieldNotification);\n\n  const handleEmailBlur = () =>\n    handleContactsFieldBlur('Email', email, setEmailFieldNotification);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isNameExist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    const isPhoneExist = contacts.find(contact => contact.phone === phone);\n\n    if (isNameExist || isPhoneExist) {\n      return;\n    }\n\n    const contact = {\n      name: name,\n      phone: `+${selectedCountry.phone}${phone}`,\n      email: email,\n    };\n\n    dispatch(addContact(contact));\n    setName('');\n    setPhone('');\n    setEmail('');\n    setNameFieldNotification(null);\n    setPhoneFieldNotification(null);\n    setEmailFieldNotification(null);\n  };\n\n  const handleNameInputChange = evt => setName(evt.target.value);\n  const handlePhoneInputChange = evt => {\n    const filteredValue = evt.target.value.replace(/\\D/g, '');\n    setPhone(filteredValue);\n  };\n  const handleEmailInputChange = evt => setEmail(evt.target.value);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label\n        id={nameInputId.current}\n        labelTitle=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onFocus={handleInputFocus}\n        onChange={handleNameInputChange}\n        onBlur={handleNameBlur}\n        title={nameValidationMessage}\n        validationStatus={nameFieldNotification}\n        maxLength={100}\n      />\n      <FormAlert fieldAlert={nameFieldNotification} />\n      <Label\n        id={phoneInputId.current}\n        labelTitle=\"Phone\"\n        type=\"tel\"\n        name=\"phone\"\n        value={phone}\n        onFocus={handleInputFocus}\n        onChange={handlePhoneInputChange}\n        onBlur={handlePhoneBlur}\n        title={phoneValidationMessage}\n        validationStatus={phoneFieldNotification}\n        maxLength={12}\n        handleTogglerMousedown={handleTogglerMousedown}\n        handleTogglerFocus={handleTogglerFocus}\n        countrySelectorRef={countrySelectorRef}\n        selectedCountry={selectedCountry}\n        selectOption={selectOption}\n        countrySearchQuery={countrySearchQuery}\n        isActive={isActive}\n        filteredCountries={filteredCountries}\n        searchCountry={searchCountry}\n        handleFocus={handleTogglerFocus}\n      />\n      <FormAlert fieldAlert={phoneFieldNotification} />\n      <Label\n        id={emailInputId.current}\n        labelTitle=\"Email\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onFocus={handleInputFocus}\n        onChange={handleEmailInputChange}\n        onBlur={handleEmailBlur}\n        title={emailValidationMessage}\n        validationStatus={emailFieldNotification}\n        maxLength={100}\n      />\n      <FormAlert fieldAlert={emailFieldNotification} />\n      <Button type=\"submit\" buttonText=\"Add contact\" />\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","export const nameValidationMessage =\n  \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\n\nexport const phoneValidationMessage =\n  'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +';\n\nexport const emailValidationMessage =\n  'Email must be a valid email address, for example johndoe@example.com. It may contain letters, numbers, dots, hyphens and underscores, followed by an @ symbol, and ending with a domain name.';\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { loginization } from 'redux/authorization';\nimport { handleAuthFieldBlur } from 'utils';\nimport { Form, Label, FormAlert } from 'components/FormPartials';\nimport Button from 'components/Common/Button/Button';\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailFieldAlert, setEmailFieldAlert] = useState(null);\n  const [passwordFieldAlert, setPasswordFieldAlert] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const handleEmailBlur = () =>\n    handleAuthFieldBlur('Email', email, setEmailFieldAlert);\n\n  const handlePasswordBlur = () => {\n    handleAuthFieldBlur('Password', password, setPasswordFieldAlert);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(loginization({ email, password }));\n    setEmail('');\n    setPassword('');\n    setEmailFieldAlert(null);\n    setPasswordFieldAlert(null);\n  };\n\n  const handleEmailInputChange = event => setEmail(event.target.value);\n  const handlePasswordInputChange = event => setPassword(event.target.value);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label\n        labelTitle=\"Email\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleEmailInputChange}\n        onBlur={handleEmailBlur}\n        validationStatus={emailFieldAlert}\n      />\n      <FormAlert fieldAlert={emailFieldAlert} />\n      <Label\n        labelTitle=\"Password\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handlePasswordInputChange}\n        onBlur={handlePasswordBlur}\n        validationStatus={passwordFieldAlert}\n      />\n      <FormAlert fieldAlert={passwordFieldAlert} />\n      <Button type=\"submit\" buttonText=\"Log in\" />\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { register } from 'redux/authorization';\nimport { handleAuthFieldBlur } from 'utils';\nimport { Form, Label, FormAlert } from 'components/FormPartials';\nimport Button from 'components/Common/Button/Button';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [nameFieldAlert, setNameFieldAlert] = useState(null);\n  const [emailFieldAlert, setEmailFieldAlert] = useState(null);\n  const [passwordFieldAlert, setPasswordFieldAlert] = useState(null);\n  const [confirmFieldAlert, setConfirmFieldAlert] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const { isLoading, error } = useSelector(state => state.auth);\n\n  const handleNameBlur = () =>\n    handleAuthFieldBlur('Name', name, setNameFieldAlert);\n\n  const handleEmailBlur = () =>\n    handleAuthFieldBlur('Email', email, setEmailFieldAlert);\n\n  const handlePasswordBlur = () => {\n    handleAuthFieldBlur('Password', password, setPasswordFieldAlert);\n  };\n\n  const handleConfirmBlur = () => {\n    handleAuthFieldBlur(\n      'Confirm Password',\n      confirm,\n      setConfirmFieldAlert,\n      true,\n      password\n    );\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (password === confirm) {\n      dispatch(register({ name, email, password }));\n    }\n  };\n\n  useEffect(() => {\n    if (!isLoading && !error) {\n      setName('');\n      setEmail('');\n      setPassword('');\n      setConfirm('');\n      setNameFieldAlert(null);\n      setEmailFieldAlert(null);\n      setPasswordFieldAlert(null);\n      setConfirmFieldAlert(null);\n    }\n  }, [isLoading, error]);\n\n  const handleNameInputChange = event => setName(event.target.value);\n  const handleEmailInputChange = event => setEmail(event.target.value);\n  const handlePasswordInputChange = event => setPassword(event.target.value);\n  const handleConfirmInputChange = event => setConfirm(event.target.value);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label\n        labelTitle=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleNameInputChange}\n        onBlur={handleNameBlur}\n        validationStatus={nameFieldAlert}\n      />\n      <FormAlert fieldAlert={nameFieldAlert} />\n      <Label\n        labelTitle=\"Email\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleEmailInputChange}\n        onBlur={handleEmailBlur}\n        validationStatus={emailFieldAlert}\n      />\n      <FormAlert fieldAlert={emailFieldAlert} />\n      <Label\n        labelTitle=\"Password\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handlePasswordInputChange}\n        onBlur={handlePasswordBlur}\n        validationStatus={passwordFieldAlert}\n      />\n      <FormAlert fieldAlert={passwordFieldAlert} />\n      <Label\n        labelTitle=\"Confirm Password\"\n        type=\"password\"\n        name=\"confirm\"\n        value={confirm}\n        onChange={handleConfirmInputChange}\n        onBlur={handleConfirmBlur}\n        validationStatus={confirmFieldAlert}\n      />\n      <FormAlert fieldAlert={confirmFieldAlert} />\n      <Button type=\"submit\" buttonText=\"Register\" />\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  min-width: 250px;\n  margin-bottom: 20px;\n`;","import { StyledForm } from './Form.styled.jsx';\n\nconst Form = ({ onSubmit, children }) => {\n  return <StyledForm onSubmit={onSubmit}>{children}</StyledForm>;\n};\n\nexport default Form;\n","import styled from 'styled-components';\n\nexport const LabelWrapper = styled.div`\n  position: relative;\n`;\n\nexport const LabelStyled = styled.label`\n  color: ${({ theme }) => theme.colors.label};\n`;\n\nexport const LabelTitle = styled.span`\n  display: block;\n  margin-bottom: 5px;\n  font-size: 1.1em;\n  font-weight: bold;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  border-radius: 5px;\n  outline: none;\n  border: none;\n  box-shadow: 0 0 0 2px\n    ${({ theme, validationStatus }) => {\n      const type = validationStatus?.type;\n      switch (type) {\n        case 'error':\n          return 'red';\n        case 'warning':\n          return 'orange';\n        case 'success':\n          return 'green';\n        default:\n          return theme.colors.inputBorder;\n      }\n    }};\n  width: 100%;\n  box-sizing: border-box;\n  padding-left: ${p => (p.type === 'tel' ? '115px' : '5px')};\n`;\n\nexport const CountrySelector = styled.div`\n  line-height: 1.15;\n  position: absolute;\n  z-index: 1;\n  bottom: 0;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  background-color: #ffffff;\n  border: 0px solid transparent;\n\n  box-sizing: border-box;\n`;\n\nexport const CountryMenuToggler = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 110px;\n  padding: 0 5px;\n  padding: 5px;\n  text-align: center;\n  cursor: pointer;\n\n  svg {\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.1);\n  }\n\n  span,\n  svg {\n    pointer-events: none;\n    user-select: none;\n  }\n`;\n\nexport const CountryMenu = styled.div`\n  position: absolute;\n  top: 150%;\n  width: 300%;\n  background-color: #ffffff;\n  display: ${p => (p.isActive ? 'block' : 'none')};\n  border-radius: 5px;\n  outline: none;\n  border: none;\n  box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.inputBorder};\n  /* padding: 2px; */\n`;\n\nexport const SearchBox = styled.input`\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n  width: 100%;\n  padding: 5px;\n  font-size: 1.1rem;\n  border: none;\n  outline: none;\n\n  &:focus {\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.mainTextAccent};\n  }\n`;\n\nexport const CountryListWrapper = styled.div`\n  padding: 2px;\n`;\n\nexport const CountryList = styled.ul`\n  max-height: 400px;\n  overflow: overlay;\n\n  &::-webkit-scrollbar {\n    width: 0.6rem;\n    border-radius: 5px;\n    padding: 2px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    height: 10%;\n    background-color: #bcbcbc; /* Темніший колір для більшої видимості */\n    border-radius: 5px; /* Плавні кути для тумби */\n    &:hover {\n      background-color: #a0a0a0; /* Зміна кольору при наведенні */\n    }\n  }\n`;\n\nexport const CountryItem = styled.li`\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n  cursor: pointer;\n  display: ${p => (p.isHidden ? 'none' : 'flex')};\n\n  svg {\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.1);\n  }\n\n  &:not(:last-child) {\n    border-bottom: 0.1rem solid #eee;\n  }\n\n  &:hover {\n    background-color: lightcyan;\n  }\n`;\n\nexport const CountryName = styled.span`\n  margin-left: 0.4rem;\n`;\n","import {\n  LabelStyled,\n  LabelTitle,\n  Input,\n  LabelWrapper,\n  CountryMenuToggler,\n  CountrySelector,\n  SearchBox,\n  CountryMenu,\n  CountryListWrapper,\n  CountryList,\n  CountryItem,\n  CountryName,\n} from './Label.styled';\nimport { Icon } from '@iconify/react';\n\nconst Label = ({\n  id,\n  labelTitle,\n  type,\n  name,\n  value,\n  onFocus,\n  onChange,\n  onBlur,\n  title,\n  validationStatus,\n  maxLength,\n  handleTogglerMousedown,\n  handleTogglerFocus,\n  selectedCountry,\n  selectOption,\n  countrySearchQuery,\n  isActive,\n  filteredCountries,\n  searchCountry,\n  countrySelectorRef,\n}) => {\n  return (\n    <LabelWrapper>\n      {type === 'tel' && (\n        <CountrySelector\n          ref={countrySelectorRef}\n          validationStatus={validationStatus}\n        >\n          <CountryMenuToggler\n            tabIndex=\"0\"\n            onMouseDown={handleTogglerMousedown}\n            onFocus={handleTogglerFocus}\n            isActive={isActive}\n          >\n            <Icon icon={`flag:${selectedCountry.code.toLowerCase()}-4x3`} />\n            <span>+{selectedCountry.phone}</span>\n          </CountryMenuToggler>\n\n          <CountryMenu isActive={isActive}>\n            <SearchBox\n              type=\"text\"\n              placeholder=\"Search Country Name\"\n              value={countrySearchQuery}\n              onChange={searchCountry}\n            />\n            <CountryListWrapper>\n              <CountryList>\n                {filteredCountries.map(country => (\n                  <CountryItem\n                    key={country.code}\n                    onClick={() => selectOption(country)}\n                  >\n                    <div>\n                      <Icon icon={`flag:${country.code.toLowerCase()}-4x3`} />\n                      <CountryName>{country.name}</CountryName>\n                    </div>\n                    <strong>+{country.phone}</strong>\n                  </CountryItem>\n                ))}\n              </CountryList>\n            </CountryListWrapper>\n          </CountryMenu>\n        </CountrySelector>\n      )}\n      <LabelStyled>\n        <LabelTitle>{labelTitle}</LabelTitle>\n        <Input\n          id={id}\n          type={type}\n          name={name}\n          value={value}\n          onFocus={onFocus}\n          onChange={onChange}\n          onBlur={onBlur}\n          title={title}\n          validationStatus={validationStatus}\n          maxLength={maxLength}\n          required\n        />\n      </LabelStyled>\n    </LabelWrapper>\n  );\n};\n\nexport default Label;\n"],"names":["NAME_CHARACTERS_CHECK_REGEX","NAME_EDGE_CHAR_VALIDATION_REGEX","EMAIL_REGEX","PHONE_REGEX","PASSWORD_REGEX","isFieldEmpty","fieldName","fieldValue","setNotification","trim","type","message","isNameValid","name","length","test","isEmailValid","email","isPasswordValid","password","isConfirmationMatch","confirmValue","handleAuthFieldBlur","setAlert","isConfirm","countries","code","phone","useState","nameFieldNotification","setNameFieldNotification","phoneFieldNotification","setPhoneFieldNotification","emailFieldNotification","setEmailFieldNotification","setName","setPhone","setEmail","contacts","useSelector","selectContacts","nameInputId","useRef","nanoid","phoneInputId","emailInputId","countrySelectorRef","selectedCountry","setSelectedCountry","countrySearchQuery","setCountrySearchQuery","isActive","setIsActive","dispatch","useDispatch","handleTogglerFocus","handleInputFocus","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","filteredCountries","filter","country","toLowerCase","includes","handleContactsFieldBlur","useMemo","phoneNumber","isContactNameValid","find","contact","isContactExist","onSubmit","preventDefault","isNameExist","isPhoneExist","addContact","id","labelTitle","value","onFocus","onChange","evt","onBlur","title","validationStatus","maxLength","FormAlert","fieldAlert","filteredValue","replace","handleTogglerMousedown","selectOption","searchCountry","handleFocus","Button","buttonText","setPassword","emailFieldAlert","setEmailFieldAlert","passwordFieldAlert","setPasswordFieldAlert","loginization","confirm","setConfirm","nameFieldAlert","setNameFieldAlert","confirmFieldAlert","setConfirmFieldAlert","state","auth","isLoading","error","register","StyledForm","styled","children","LabelWrapper","LabelStyled","theme","colors","label","LabelTitle","Input","inputBorder","p","CountrySelector","CountryMenuToggler","CountryMenu","SearchBox","mainTextAccent","CountryListWrapper","CountryList","CountryItem","isHidden","CountryName","ref","tabIndex","onMouseDown","icon","placeholder","map","onClick","required"],"sourceRoot":""}